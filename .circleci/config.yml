defaults: &defaults
  docker:
    - image: hexpm/elixir:1.18.1-erlang-27.1.2-ubuntu-jammy-20240808
  environment:
    MIX_ENV: prod

install_fwup: &install_fwup
  run:
    name: Install fwup
    command: |
      wget https://github.com/fwup-home/fwup/releases/download/v1.11.0/fwup_1.11.0_amd64.deb
      dpkg -i fwup_1.11.0_amd64.deb

install_system_deps: &install_system_deps
  run:
    name: Install system dependencies
    command: |
      apt update
      apt install -y libmnl-dev libnl-genl-3-dev build-essential automake autoconf git squashfs-tools pkg-config curl wget file zip jq

install_hex_rebar: &install_hex_rebar
  run:
    name: Install Hex, Rebar, nerves_bootstrap
    command: |
      mix local.hex --force
      mix local.rebar --force
      mix archive.install hex nerves_bootstrap --force

install_gh_cli: &install_gh_cli
  run:
    name: Install github CLI tools
    command: |
      apt update
      apt install -y curl
      curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
      chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
      echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | tee /etc/apt/sources.list.d/github-cli.list > /dev/null
      apt update
      apt install -y gh

build: &build
  steps:
    - checkout
    - <<: *install_system_deps
    - <<: *install_fwup
    - <<: *install_hex_rebar
    - run: echo "$MIX_TARGET" > .target
    - run:
        name: Fetch Deps
        command: |
          n=0
          until [ $n -ge 5 ]; do
            mix deps.get && break
            n=$((n+1))
            echo "Error while fetching deps. Retrying in 5 seconds"
            sleep 5
          done
    - run:
        name: Check formatting
        command: mix format --check-formatted
    - run:
        name: Build
        command: mix compile
    - run:
        name: Create firmware
        command: |
          mix firmware.image
    - run:
          name: Create artifacts dir
          command: mkdir -p ~/deploy/artifacts
    - run:
        name: Copy firmware file
        command: |
          cp _build/*/nerves/images/*.fw ~/deploy/artifacts/circuits_quickstart_${MIX_TARGET}.fw
          zip circuits_quickstart_${MIX_TARGET}.zip circuits_quickstart.img
          cp circuits_quickstart_${MIX_TARGET}.zip ~/deploy/artifacts
          cp ./CHANGELOG.md ~/deploy/CHANGELOG.md
    - store_artifacts:
        path: ~/deploy
        destination: images
    - save_cache:
        key: nerves/deploy/{{ checksum ".target" }}-{{ .Revision }}-{{ .Environment.CIRCLE_TAG }}
        paths:
          - ~/deploy

build_grisp2: &build_grisp2
  steps:
    - checkout
    - <<: *install_system_deps
    - <<: *install_fwup
    - <<: *install_hex_rebar
    - run: echo "$MIX_TARGET" > .target
    - run:
        name: Fetch Deps
        command: |
          n=0
          until [ $n -ge 5 ]; do
            mix deps.get && break
            n=$((n+1))
            echo "Error while fetching deps. Retrying in 5 seconds"
            sleep 5
          done
    - run:
        name: Check formatting
        command: mix format --check-formatted
    - run:
        name: Build
        command: mix compile
    - run:
        name: Create firmware
        command: |
          mix firmware.image
    - run:
          name: Create artifacts dir
          command: mkdir -p ~/deploy/artifacts
    - run:
        name: Copy firmware file
        command: |
          cp _build/*/nerves/images/*.fw ~/deploy/artifacts/circuits_quickstart_${MIX_TARGET}.fw
          gzip -k circuits_quickstart.img
          cp circuits_quickstart.img.gz ~/deploy/artifacts/circuits_quickstart_${MIX_TARGET}.img.gz
          cp ./CHANGELOG.md ~/deploy/CHANGELOG.md
    - store_artifacts:
        path: ~/deploy
        destination: images
    - save_cache:
        key: nerves/deploy/{{ checksum ".target" }}-{{ .Revision }}-{{ .Environment.CIRCLE_TAG }}
        paths:
          - ~/deploy

version: 2.0

jobs:
  build_osd32mp1:
    <<: *defaults
    environment:
      MIX_TARGET: osd32mp1
    <<: *build

  build_rpi5:
    <<: *defaults
    environment:
      MIX_TARGET: rpi5
    <<: *build

  build_rpi0_2:
    <<: *defaults
    environment:
      MIX_TARGET: rpi0_2
    <<: *build

  build_rpi4:
    <<: *defaults
    environment:
      MIX_TARGET: rpi4
    <<: *build

  build_rpi3a:
    <<: *defaults
    environment:
      MIX_TARGET: rpi3a
    <<: *build

  build_rpi3:
    <<: *defaults
    environment:
      MIX_TARGET: rpi3
    <<: *build

  build_rpi2:
    <<: *defaults
    environment:
      MIX_TARGET: rpi2
    <<: *build

  build_rpi:
    <<: *defaults
    environment:
      MIX_TARGET: rpi
    <<: *build

  build_rpi0:
    <<: *defaults
    environment:
      MIX_TARGET: rpi0
    <<: *build

  build_bbb:
    <<: *defaults
    environment:
      MIX_TARGET: bbb
    <<: *build

  build_npi_imx6ull:
    <<: *defaults
    environment:
      MIX_TARGET: npi_imx6ull
    <<: *build

  build_mangopi_mq_pro:
    <<: *defaults
    environment:
      MIX_TARGET: mangopi_mq_pro
    <<: *build

  build_grisp2:
    <<: *defaults
    environment:
      MIX_TARGET: grisp2
    <<: *build_grisp2

  deploy:
    <<: *defaults
    steps:
      - checkout
      - <<: *install_gh_cli
      - run:
          name: Create Artifacts Dir
          command: mkdir -p ~/deploy
      - run:
          name: osd32mp1
          command: echo "osd32mp1" > .target
      - restore_cache:
          key: nerves/deploy/{{ checksum ".target" }}-{{ .Revision }}-{{ .Environment.CIRCLE_TAG }}
      - run:
          name: rpi5
          command: echo "rpi5" > .target
      - restore_cache:
          key: nerves/deploy/{{ checksum ".target" }}-{{ .Revision }}-{{ .Environment.CIRCLE_TAG }}
      - run:
          name: rpi0_2
          command: echo "rpi0_2" > .target
      - restore_cache:
          key: nerves/deploy/{{ checksum ".target" }}-{{ .Revision }}-{{ .Environment.CIRCLE_TAG }}
      - run:
          name: rpi4
          command: echo "rpi4" > .target
      - restore_cache:
          key: nerves/deploy/{{ checksum ".target" }}-{{ .Revision }}-{{ .Environment.CIRCLE_TAG }}
      - run:
          name: rpi3a
          command: echo "rpi3a" > .target
      - restore_cache:
          key: nerves/deploy/{{ checksum ".target" }}-{{ .Revision }}-{{ .Environment.CIRCLE_TAG }}
      - run:
          name: rpi3
          command: echo "rpi3" > .target
      - restore_cache:
          key: nerves/deploy/{{ checksum ".target" }}-{{ .Revision }}-{{ .Environment.CIRCLE_TAG }}
      - run:
          name: rpi2
          command: echo "rpi2" > .target
      - restore_cache:
          key: nerves/deploy/{{ checksum ".target" }}-{{ .Revision }}-{{ .Environment.CIRCLE_TAG }}
      - run:
          name: rpi
          command: echo "rpi" > .target
      - restore_cache:
          key: nerves/deploy/{{ checksum ".target" }}-{{ .Revision }}-{{ .Environment.CIRCLE_TAG }}
      - run:
          name: rpi0
          command: echo "rpi0" > .target
      - restore_cache:
          key: nerves/deploy/{{ checksum ".target" }}-{{ .Revision }}-{{ .Environment.CIRCLE_TAG }}
      - run:
          name: bbb
          command: echo "bbb" > .target
      - restore_cache:
          key: nerves/deploy/{{ checksum ".target" }}-{{ .Revision }}-{{ .Environment.CIRCLE_TAG }}
      - run:
          name: npi_imx6ull
          command: echo "npi_imx6ull" > .target
      - restore_cache:
          key: nerves/deploy/{{ checksum ".target" }}-{{ .Revision }}-{{ .Environment.CIRCLE_TAG }}
      - run:
          name: mangopi_mq_pro
          command: echo "mangopi_mq_pro" > .target
      - restore_cache:
          key: nerves/deploy/{{ checksum ".target" }}-{{ .Revision }}-{{ .Environment.CIRCLE_TAG }}
      - run:
          name: grisp2
          command: echo "grisp2" > .target
      - restore_cache:
          key: nerves/deploy/{{ checksum ".target" }}-{{ .Revision }}-{{ .Environment.CIRCLE_TAG }}
      - run:
          name: Create release notes - FAILS if tag isn't in CHANGELOG.md
          command: awk -v tag="## ${CIRCLE_TAG}" 'BEGIN {found=0} $0 ~ tag {found=1; next} found && /^##/ {found=0} found {print}' ~/deploy/CHANGELOG.md | sed '/./,$!d' > ~/deploy/RELEASE_NOTES
      - store_artifacts:
          path: ~/deploy
          destination: images
      - run:
          name: Create a draft release on Github
          command: gh release create $CIRCLE_TAG -F ~/deploy/RELEASE_NOTES --repo $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME --draft --verify-tag
      - run:
          name: Upload artifacts to Github
          command: gh release upload $CIRCLE_TAG ~/deploy/artifacts/* --repo $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME
      - run:
          name: Make it official
          command: gh release edit $CIRCLE_TAG --repo $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME --draft=false

workflows:
  version: 2
  build_deploy:
    jobs:
      - build_osd32mp1:
          context: org-global
          filters:
            tags:
              only: /.*/
      - build_rpi0_2:
          context: org-global
          filters:
            tags:
              only: /.*/
      - build_rpi5:
          context: org-global
          filters:
            tags:
              only: /.*/
      - build_rpi4:
          context: org-global
          filters:
            tags:
              only: /.*/
      - build_rpi3a:
          context: org-global
          filters:
            tags:
              only: /.*/
      - build_rpi3:
          context: org-global
          filters:
            tags:
              only: /.*/
      - build_rpi2:
          context: org-global
          filters:
            tags:
              only: /.*/
      - build_rpi:
          context: org-global
          filters:
            tags:
              only: /.*/
      - build_rpi0:
          context: org-global
          filters:
            tags:
              only: /.*/
      - build_bbb:
          context: org-global
          filters:
            tags:
              only: /.*/
      - build_npi_imx6ull:
          context: org-global
          filters:
            tags:
              only: /.*/
      - build_mangopi_mq_pro:
          context: org-global
          filters:
            tags:
              only: /.*/
      - build_grisp2:
          context: org-global
          filters:
            tags:
              only: /.*/
      - deploy:
          context: org-global
          requires:
            - build_osd32mp1
            - build_rpi5
            - build_rpi4
            - build_rpi3a
            - build_rpi3
            - build_rpi2
            - build_rpi
            - build_rpi0
            - build_rpi0_2
            - build_bbb
            - build_npi_imx6ull
            - build_grisp2
            - build_mangopi_mq_pro
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v.*/
